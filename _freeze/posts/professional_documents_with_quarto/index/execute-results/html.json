{
  "hash": "5562b1e2972cb90a29ddfeb2e2adc066",
  "result": {
    "markdown": "---\ntitle: \"Rendering professional documents with Quarto\"\nauthor: \"Edwin Alvarado-Mena\"\ndate: \"2024-11-15\"\ncategories: [Quarto, code, LaTeX]\nimage: \"image.jpg\"\n---\n\n\n![[Photo: Bob Demers/UA News]{.smallcaps}](image.jpg){fig-align=\"center\" width=\"600\"}\n\nProducing high-quality documents and reports is of paramount importance during your PhD life.\n\nEven if you are not minoring in methods, you must take a few statistics courses along your doctoral journey at the SGPP.\n\nMethods courses' assignments are especially tricky as you must combine plain text, code, and results.\n\nIn general, instructors will expect to see, say, a fancy table with regression coefficients and other statistics. But you must also discuss your data, methods, and findings.\n\nOK. You'll then look for a text editor. Microsoft Word or Google Docs may be your immediate choices.\n\nSo, you create a new Microsoft Word document, write some paragraphs about research design, insert screenshots of the relevant figures and tables, etc. \n\nScreenshots, however, do not look very professional...\n\nTo make things worse, instructors will often want you to showcase your programming thinking. Technical questions will be asked. How did you wrangle the data? How did you set the relevant variables? How did you fit the models?\n\nTherefore, you must add code to your prose.\n\nYou might be tempted to take screenshots of the R console and insert them into the document.\n\nOnce again, copy-pasting screenshots is not very professional...\n\nWe need tools that are better than Microsoft Word or Google Docs for high-quality scientific writing.\n\n# A model Quarto document\n\nLuckily, we have Quarto documents!\n\nQuarto is an open-source software for scientific publishing. It is included in RStudio—You don't have to install anything else.\n\nQuarto documents can combine plain text, code, and code output. No need for screenshots.\n\nPlus, Quarto documents can be rendered into multiple formats, including PDF, which makes them great for PhD assignments.\n\nYou can create Quarto documents in RStudio by clicking *File* \\> *New File* \\> *Quarto Document*.\n\nRStudio will open a Quarto document where you can write, program, and render into a professionally-looking PDF document.\n\nYou'll see a block of YAML metadata at the top of the Quarto document. YAML metadata provides a lot of room for customization. You can modify those parameters at will.\n\nTo make things easier, I have granted you access to a GitHub repository with [a model Quarto document](https://github.com/ealvaradomena/class_repo) ready to be rendered into a PDF file. Feel free to use this repository as a model for your grad school submissions.\n\nNotice that this GitHub repository follows the guidelines for working directory organization I listed in another [blog post](https://unofficialprimer.netlify.app/posts/how_to_organize_your_computer/).\n\nAs you'll see, Quarto makes it possible to do cool things such as printing both code and code output, managing references, and inserting {{< latex >}} math.\n\n# R or Python? Why not both!\n\nYou can even combine R and Python chunks in Quarto! Have a look:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## This is R\ntoupper(\"hola\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"HOLA\"\n```\n:::\n:::\n\n\n::: callout-important\n## Install package\n\nYou must install and load the `reticulate` package prior to running Python code: `library(reticulate)`.\n\n\n\n\n:::\n\n\n::: {.cell}\n\n```{.python .cell-code}\n## This is Python\n\"hola\".upper()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'HOLA'\n```\n:::\n:::\n\n\nFurthermore, you can call objects from an R environment while programming in a Python chunk, and vice-versa, which means that you can build bilingual workflows:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## This is R\nstring <- \"hola\"\n```\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\n## This is Python calling an object from the R environment\nr.string.upper()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'HOLA'\n```\n:::\n:::\n\n\nSo you can switch between R and Python, making the most of both languages. This feature is truly awesome! It has dramatically enhanced my productivity.\n\nLet's say that your data-wrangling skills are quite good in R because of your mastery of the `dplyr` package. It may be the case that you're working on a project that requires Natural Language Processing (NLP) libraries that exist in Python only. Quarto lets you combine both languages! There's no need to make tough decisions.\n\n# Other uses\n\nOf course, you can render fancy documents in Quarto even if equations or programming are not involved.\n\nYou could write your comprehensive examination or your prospectus in Quarto. Those documents will have a unique look that speaks volumes about your professionalization (trust me, demonstrating professionalization is critical in grad school).\n\nAnd you could create your personal website in Quarto. Actually, this blog is made with Quarto—The [GitHub repository](https://github.com/ealvaradomena/unofficial_primer) is public, so please feel free to fork it.\n\nThere's a detailed user guide to Quarto. You can visit it [here](https://quarto.org/). If you have questions about Quarto's many uses, this is the first place you should look. \n\nI hope you fall in love with Quarto as much as I have.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}